name: Pull Request Validation

on:
  pull_request:
    branches: [ master ]
    types: [opened, synchronize, reopened]

jobs:
  validate:
    name: Validate Pull Request
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Validate Maven configuration
        run: mvn validate

      - name: Compile project
        run: mvn clean compile -B

      - name: Run tests
        run: mvn test -B

      - name: Run package (without tests)
        run: mvn package -B -DskipTests

      - name: Check for Maven dependency issues
        run: mvn dependency:analyze -DfailOnWarning=false

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: pr-test-results-${{ github.event.number }}
          path: target/surefire-reports/

      - name: Comment PR with build status
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('Build Status')
            );
            
            const status = '${{ job.status }}';
            const runId = '${{ github.run_id }}';
            const runUrl = `${context.payload.repository.html_url}/actions/runs/${runId}`;
            
            const body = `## Build Status: ${status === 'success' ? '✅ Passed' : '❌ Failed'}
            
            **Workflow:** Pull Request Validation
            **Commit:** ${context.sha.substring(0, 7)}
            **Run:** [#${runId}](${runUrl})
            
            ${status === 'success' ? 
              '✅ All checks passed! This PR is ready for review.' : 
              '❌ Some checks failed. Please review the workflow logs and fix any issues.'
            }`;
            
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: body
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: body
              });
            }

  code-quality:
    name: Code Quality Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Run SpotBugs analysis
        run: |
          mvn compile spotbugs:check -DfailOnError=false || true

      - name: Check code formatting (if checkstyle plugin is configured)
        run: |
          mvn checkstyle:check -DfailOnViolation=false || echo "Checkstyle not configured"

      - name: Upload SpotBugs results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: spotbugs-results-${{ github.event.number }}
          path: target/spotbugsXml.xml